service: cryptocredentials-backend-v1

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallsback to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  # Set the table names here so we can use it while testing locally

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev 
  region: us-east-2

  # These environment variables are made available to our functions
  # under process.env.
  environment:
    twitterApiKey: ${ssm:/twitterApiKey~true}
    twitterAppKey: ${ssm:/twitterAppKey~true}
    twitterAppSecret: ${ssm:/twitterAppSecret~true}

functions:
  verifyTwitter:
    handler: verifyTwitter.main
    events:
      - http:
          path: twitter/{id}
          method: get
          cors: true
          private: false 
  oauth:
    handler: oauth.main
    events:
      - http:
          path: oauth 
          method: get
          cors: true
          private: false 
  oauthCallback:
    handler: oauthCallback.main
    events:
      - http:
          path: oauth/callback 
          method: get
          cors: true
          private: false 


# Create our resources with seperate CloudFormation templates
resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}
